package com.niit.musichub.controller;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.niit.musichub.*;
import com.niit.musichub.model.*;
import com.niit.musichub.dao.*;

@Controller
public class ProductController {
	
	 @Autowired
	 private ProductDAO productDAO;
	 
	@RequestMapping(value = "/save", method = RequestMethod.POST)
	public ModelAndView saveProduct(@ModelAttribute("command")Product product, 
	   BindingResult result) {
	  Product product = prepareModel(Product);
	  productDAO.addProduct(product);
	  return new ModelAndView("redirect:/add.html");
	 }

	 @RequestMapping(value="/AllProducts", method = RequestMethod.GET)
	 public ModelAndView listProduct() {
	  Map<String Object> model = new HashMap<String Object>();
	  model.put("AllProducts",  prepareListofBean(productDAO.listEmployeess()));
	  return new ModelAndView("ProductList", model);
	 }

	 @RequestMapping(value = "/add", method = RequestMethod.GET)
	 public ModelAndView addEmployee(@ModelAttribute("command")Product product,
	   BindingResult result) {
	  Map<String, Object> model = new HashMap<String, Object>();
	  model.put("AllProducts",  prepareListofBean(productDAO.list());
	  return new ModelAndView("addProduct", model);
	 }
	 
	@RequestMapping(value = "/index", method = RequestMethod.GET)
	public ModelAndView welcome() {
	  return new ModelAndView("index");
	 }

	@RequestMapping(value = "/delete", method = RequestMethod.GET)
	public ModelAndView editEmployee(@ModelAttribute("command")EmployeeBean employeeBean,
	   BindingResult result) {
	  employeeService.deleteEmployee(prepareModel(employeeBean));
	  Map<String, Object> model = new HashMap<String, Object>();
	  model.put("employee", null);
	  model.put("employees",  prepareListofBean(employeeService.listEmployeess()));
	  return new ModelAndView("addEmployee", model);
	 }
	 
	@RequestMapping(value = "/edit", method = RequestMethod.GET)
	public ModelAndView deleteEmployee(@ModelAttribute("command")EmployeeBean employeeBean,
	   BindingResult result) {
	  Map<String, Object> model = new HashMap<String, Object>();
	  model.put("employee", prepareEmployeeBean(employeeService.getEmployee(employeeBean.getId())));
	  model.put("employees",  prepareListofBean(employeeService.listEmployeess()));
	  return new ModelAndView("addEmployee", model);
	 }
	 
	 private Employee prepareModel(EmployeeBean employeeBean){
	  Employee employee = new Employee();
	  employee.setEmpAddress(employeeBean.getAddress());
	  employee.setEmpAge(employeeBean.getAge());
	  employee.setEmpName(employeeBean.getName());
	  employee.setSalary(employeeBean.getSalary());
	  employee.setEmpId(employeeBean.getId());
	  employeeBean.setId(null);
	  return employee;
	 }
	 
	 private List<EmployeeBean> prepareListofBean(List<Employee> employees){
	  List<employeebean> beans = null;
	  if(employees != null && !employees.isEmpty()){
	   beans = new ArrayList<EmployeeBean>();
	   EmployeeBean bean = null;
	   for(Employee employee : employees){
	    bean = new EmployeeBean();
	    bean.setName(employee.getEmpName());
	    bean.setId(employee.getEmpId());
	    bean.setAddress(employee.getEmpAddress());
	    bean.setSalary(employee.getSalary());
	    bean.setAge(employee.getEmpAge());
	    beans.add(bean);
	   }
	  }
	  return beans;
	 }
	 
	 private EmployeeBean prepareEmployeeBean(Employee employee){
	  EmployeeBean bean = new EmployeeBean();
	  bean.setAddress(employee.getEmpAddress());
	  bean.setAge(employee.getEmpAge());
	  bean.setName(employee.getEmpName());
	  bean.setSalary(employee.getSalary());
	  bean.setId(employee.getEmpId());
	  return bean;
	 }
	}
}
